image: node:14.4-alpine3.10

variables:
  DOCKER_DRIVER: overlay

stages:
  - checks
  - preview
  - promote
  - release
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - apk --no-cache add git
  - export GIT_AUTHOR_NAME="Ubiwhere Release Tools"
  - export GIT_AUTHOR_EMAIL="ci@ubiwhere.com"
  - git config user.name "Ubiwhere Release Tools"
  - git config user.email "ci@ubiwhere.com"
  - export NODE_OPTIONS=--max_old_space_size=4096
  - yarn install


# Eslint check
lint:
  stage: checks
  allow_failure: true
  script:
    - yarn lint
  except:
    refs:
      - master
      - staging
      - tags

# Typescript
type:
  stage: checks
  allow_failure: true
  script:
    - yarn typescript
  except:
    refs:
      - master
      - staging
      - tags

# Test
test:
  stage: checks
  allow_failure: true
  script:
    - yarn test --reporters=default --reporters=jest-junit
  except:
    refs:
      - master
      - staging
      - tags
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

# Build
build:
  stage: checks
  allow_failure: false
  script:
    - yarn build
  except:
    refs:
      - master
      - staging
      - tags

# Promote to Staging
promote to staging:
  stage: promote
  only:
    - develop
  before_script:
    - apk --no-cache add git
    - export URL_HOST=$(git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g")
    - git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@${URL_HOST}"
    - git fetch
  script:
    - git checkout staging
    - git pull
    - git pull origin develop
    - git push

# Deploy Staging
deploy:staging:
  stage: deploy
  script:
    - yarn add netlify-cli
    - yarn build
    - mkdir ~/.netlify
    - mkdir .netlify
    - 'echo "{\"siteId\": \"$APP_ID_NETTLIFY\"}" > .netlify/state.json'
    - yarn netlify deploy --dir build --prod
  environment:
    name: Staging
    url: https://5gzorro.netlify.app
  artifacts:
    paths:
      - public/
    expire_in: 1 day
  only:
    - staging

# Promote to Master
promote to master:
  stage: promote
  when: manual
  only:
    - staging
  before_script:
    - apk --no-cache add git
    - export URL_HOST=$(git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g")
    - git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@${URL_HOST}"
  script:
    - git checkout master
    - git pull
    - git pull origin staging
    - git push

# Release Production
release:
  stage: release
  script:
    - yarn release
  only:
    - master
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /chore\(release\)/

# Deploy production
deploy:production:
  stage: deploy
  when: manual
  script:
    - yarn add netlify-cli
    - yarn build
    - mkdir ~/.netlify
    - mkdir .netlify
    - 'echo "{\"siteId\": \"$APP_ID_NETTLIFY\"}" > .netlify/state.json'
    - yarn netlify deploy --dir build --prod
  environment:
    name: Staging
    url: https://5gzorro.netlify.app
  artifacts:
    paths:
      - public/
    expire_in: 5 day
  only:
    - master
